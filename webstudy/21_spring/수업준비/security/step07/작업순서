- mybatis를 이용한 로그인 기능
	

1. 기본 테이블 및 데이터 준비하기

create table tb_security_member (
      id varchar2(20) not null primary key,
      password varchar2(100) not null,
      name varchar2(100) not null,
      reg_date date default sysdate
);

insert into tb_security_member (id, password, name) values('admin', '$2a$10$N0NWVUD8CtX9WUMHj7FH9uJxPKInClcYqwW4p7z.8g6hEur7kTGVm', 'hong');

insert into tb_security_member (id, password, name) values('user', '$2a$10$N0NWVUD8CtX9WUMHj7FH9uJxPKInClcYqwW4p7z.8g6hEur7kTGVm', '유저');

create table tb_security_member_auth (
     id varchar2(20) not null,
     auth varchar2(10) not null,
     constraint member_auth_fk foreign key(id) references tb_security_member(id)
);

insert into tb_security_member_auth(id, auth) values('admin', 'ROLE_S');

insert into tb_security_member_auth(id, auth) values('admin', 'ROLE_U');

insert into tb_security_member_auth(id, auth) values('user', 'ROLE_U');

commit;


2. spring-context.xml 내용 추가하기

패스워드 암호화 처리하기
<bean id="bcryptPasswordEncoder" 
	  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	  
	  
3. 테스트 파일들 준비하기	  

	/01_spring_core/src/main/java/kr/co/mlec/security/MyBatisUserDetailsService.java	  
	/01_spring_core/src/main/java/kr/co/mlec/security/vo 하위 클래스들 작성
	/01_spring_core/src/main/java/kr/co/mlec/security/dao/MemberMapper.java
	/01_spring_core/src/main/resources/config/security/sqlmap/member.xml	  
	/01_spring_core/src/main/resources/config/security/mybatis/db.properties
	

4. 테스트 진행하기
